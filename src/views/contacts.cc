//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "contacts.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>

#include "../models/contact.hpp"

std::string contacts::genText(const DrTemplateData& contacts_view_data)
{
	drogon::OStringStream contacts_tmp_stream;
	std::string layoutName{""};
    using namespace dws::models;
    auto contacts=contacts_view_data.get<std::vector<Contact>>("contacts");
 if(contacts.size()>0){
	contacts_tmp_stream << "    <h2>Contacts</h2>\n";
	contacts_tmp_stream << "<div class=\"row\">\n";
	contacts_tmp_stream << "  <div class=\"col-lg-6\">\n";
	contacts_tmp_stream << "    <div class=\"input-group\">\n";
	contacts_tmp_stream << "      <span class=\"input-group-btn\">\n";
	contacts_tmp_stream << "        <button class=\"btn btn-default\"\n";
	contacts_tmp_stream << "              hx-post=\"/contacts\"\n";
	contacts_tmp_stream << "              hx-target=\"#main\"\n";
	contacts_tmp_stream << "              hx-include=\"[name='firstname']\">Search</button>\n";
	contacts_tmp_stream << "      </span>\n";
	contacts_tmp_stream << "      <input type=\"text\" name=\"firstname\" class=\"form-control\" placeholder=\"Contact's first name\">\n";
	contacts_tmp_stream << "    </div>\n";
	contacts_tmp_stream << "  </div>\n";
	contacts_tmp_stream << "</div>\n";
contacts_tmp_stream<<"\n";
	contacts_tmp_stream << "    <table class=\"table table-striped table-hover table-responsive table-bordered\">\n";
	contacts_tmp_stream << "      <thead class=\"thead-dark\">\n";
	contacts_tmp_stream << "        <tr>\n";
	contacts_tmp_stream << "          <th scope=\"col\">ID</th>\n";
	contacts_tmp_stream << "          <th scope=\"col\">First name</th>\n";
	contacts_tmp_stream << "          <th scope=\"col\">Last name</th>\n";
	contacts_tmp_stream << "          <th scope=\"col\">EMail</th>\n";
	contacts_tmp_stream << "          <th scope=\"col\">Phone</th>\n";
	contacts_tmp_stream << "          <th scope=\"col\"></th>\n";
	contacts_tmp_stream << "        </tr>\n";
	contacts_tmp_stream << "      </thead>\n";
	contacts_tmp_stream << "      <tbody>\n";
	contacts_tmp_stream << "        ";
 for(const auto& c : contacts){
	contacts_tmp_stream << "          <th scope=\"row\">";
contacts_tmp_stream<<c.ID;
	contacts_tmp_stream << "</th>\n";
	contacts_tmp_stream << "            <td>";
contacts_tmp_stream<<c.FirstName;
	contacts_tmp_stream << "</td>\n";
	contacts_tmp_stream << "            <td>";
contacts_tmp_stream<<c.LastName;
	contacts_tmp_stream << "</td>\n";
	contacts_tmp_stream << "            <td>";
contacts_tmp_stream<<c.EMail;
	contacts_tmp_stream << "</td>\n";
	contacts_tmp_stream << "            <td>";
contacts_tmp_stream<<c.Phone;
	contacts_tmp_stream << "</td>\n";
	contacts_tmp_stream << "            <td>\n";
	contacts_tmp_stream << "              <a style=\"text-decoration: underline; cursor: pointer;\"\n";
	contacts_tmp_stream << "                  hx-get=\"/contacts/";
contacts_tmp_stream<<c.ID;
	contacts_tmp_stream << "/edit\"\n";
	contacts_tmp_stream << "                  hx-target=\"#main\"\n";
	contacts_tmp_stream << "                  hx-swap=\"innerHTML\">Edit</a>\n";
	contacts_tmp_stream << "              <a style=\"text-decoration: underline; cursor: pointer;\"\n";
	contacts_tmp_stream << "                  hx-get=\"/contacts/";
contacts_tmp_stream<<c.ID;
	contacts_tmp_stream << "\"\n";
	contacts_tmp_stream << "                  hx-target=\"#main\"\n";
	contacts_tmp_stream << "                  hx-swap=\"innerHTML\">View</a>\n";
	contacts_tmp_stream << "              <a style=\"text-decoration: underline; cursor: pointer; color: red;\"\n";
	contacts_tmp_stream << "                  hx-get=\"/contacts/";
contacts_tmp_stream<<c.ID;
	contacts_tmp_stream << "/delete\"\n";
	contacts_tmp_stream << "                  hx-confirm=\"Are you sure you wish to delete this contact?\"\n";
	contacts_tmp_stream << "                  hx-target=\"#main\"\n";
	contacts_tmp_stream << "                  hx-swap=\"innerHTML\">Delete</a>    \n";
	contacts_tmp_stream << "            </td>\n";
	contacts_tmp_stream << "          </tr>\n";
	contacts_tmp_stream << "          ";
}
	contacts_tmp_stream << "      </tbody>\n";
	contacts_tmp_stream << "    </table>\n";
	contacts_tmp_stream << "    <p>\n";
	contacts_tmp_stream << "      <button data-bs-toggle=\"modal\"\n";
	contacts_tmp_stream << "              data-bs-target=\"#addContactModal\"\n";
	contacts_tmp_stream << "              class=\"btn btn-primary\"\n";
	contacts_tmp_stream << "              hx-get=\"/contacts/new\"\n";
	contacts_tmp_stream << "              hx-target=\"#main\"\n";
	contacts_tmp_stream << "              hx-swap=\"innerHTML\">Add Contact</button>\n";
	contacts_tmp_stream << "    </p>\n";
	contacts_tmp_stream << "    ";
 }
	contacts_tmp_stream << "</body>\n";
	contacts_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(contacts_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data;
auto str = std::move(contacts_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
